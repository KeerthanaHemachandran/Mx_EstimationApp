// This file was generated by Mendix Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package myfirstmodule.actions;

import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import java.util.HashMap;
import java.util.Map;
import myfirstmodule.proxies.Data_Based_Service.MemberNames;

public class Java_action_Databased extends CustomJavaAction<java.lang.Double>
{
	private IMendixObject __Data_Based_ServiceParameter1;
	private myfirstmodule.proxies.Data_Based_Service Data_Based_ServiceParameter1;
	private java.util.List<IMendixObject> __Service_AttributeParameter1;
	private java.util.List<myfirstmodule.proxies.Service_Attribute_Local> Service_AttributeParameter1;
	private java.util.List<IMendixObject> __Service_Attribute_EntriesParameter1;
	private java.util.List<myfirstmodule.proxies.Data_Based_SAV> Service_Attribute_EntriesParameter1;

	public Java_action_Databased(IContext context, IMendixObject Data_Based_ServiceParameter1, java.util.List<IMendixObject> Service_AttributeParameter1, java.util.List<IMendixObject> Service_Attribute_EntriesParameter1)
	{
		super(context);
		this.__Data_Based_ServiceParameter1 = Data_Based_ServiceParameter1;
		this.__Service_AttributeParameter1 = Service_AttributeParameter1;
		this.__Service_Attribute_EntriesParameter1 = Service_Attribute_EntriesParameter1;
	}

	@Override
	public java.lang.Double executeAction() throws Exception
	{
		this.Data_Based_ServiceParameter1 = __Data_Based_ServiceParameter1 == null ? null : myfirstmodule.proxies.Data_Based_Service.initialize(getContext(), __Data_Based_ServiceParameter1);

		this.Service_AttributeParameter1 = new java.util.ArrayList<myfirstmodule.proxies.Service_Attribute_Local>();
		if (__Service_AttributeParameter1 != null)
			for (IMendixObject __Service_AttributeParameter1Element : __Service_AttributeParameter1)
				this.Service_AttributeParameter1.add(myfirstmodule.proxies.Service_Attribute_Local.initialize(getContext(), __Service_AttributeParameter1Element));

		this.Service_Attribute_EntriesParameter1 = new java.util.ArrayList<myfirstmodule.proxies.Data_Based_SAV>();
		if (__Service_Attribute_EntriesParameter1 != null)
			for (IMendixObject __Service_Attribute_EntriesParameter1Element : __Service_Attribute_EntriesParameter1)
				this.Service_Attribute_EntriesParameter1.add(myfirstmodule.proxies.Data_Based_SAV.initialize(getContext(), __Service_Attribute_EntriesParameter1Element));

		// BEGIN USER CODE
		// BEGIN USER CODE
		Double ResultDev = 0.0;
		try {
			System.out.println("Service_Attribute_EntriesParameter1 "+Service_Attribute_EntriesParameter1.size());
			for (myfirstmodule.proxies.Data_Based_SAV entries : Service_Attribute_EntriesParameter1) {
				String key1 = entries.getValue_Name();
				String key = entries.getService_Attribute();
				Double value = entries.getValue_Point().doubleValue();
				System.out.println(key + "_" + key1 + "    " + value);
				Service_Attribute_Entries_Map.put(key + "_" + key1, value);

			}
			System.out.println("Service_AttributeParameter1 "+Service_AttributeParameter1.size());
			for (myfirstmodule.proxies.Service_Attribute_Local entries : Service_AttributeParameter1) {
				String key = entries.getService_Attribute_Name();
				Integer value = entries.getService_Point();
				System.out.println(key + "    " + value);
				Service_Attribute_Map.put(key, value);
			}

			// Process Developments
			if(Data_Based_ServiceParameter1.getDevelopment()!=null)
			ResultDev += getResultValue(MemberNames.Development.toString(),
					Data_Based_ServiceParameter1.getDevelopment());

			// Service Type
			if(Data_Based_ServiceParameter1.getService_Type()!=null)
			ResultDev += getResultValue(MemberNames.Service_Type.toString(),
					Data_Based_ServiceParameter1.getService_Type());

			// Output Format
			if(Data_Based_ServiceParameter1.getOutput_Format()!=null)
			ResultDev += getResultValue(MemberNames.Output_Format.toString(),
					Data_Based_ServiceParameter1.getOutput_Format());

			// Monolithic
			if(Data_Based_ServiceParameter1.getCoExist_with_Monolithic()!=null)
			ResultDev += getResultValue(
					MemberNames.CoExist_with_Monolithic.toString(),
					Data_Based_ServiceParameter1.getCoExist_with_Monolithic()
							.getCaption());

			// Versioning
			if(Data_Based_ServiceParameter1.getVersioning()!=null)
			ResultDev += getResultValue(MemberNames.Versioning.toString(),
					Data_Based_ServiceParameter1.getVersioning().getCaption());

			// ServiceOverlay
			if(Data_Based_ServiceParameter1.getService_Overlap()!=null)
			ResultDev += getResultValue(MemberNames.Service_Overlap.toString(),
					Data_Based_ServiceParameter1.getService_Overlap()
							.getCaption());

			// Blocking Use Case
			if(Data_Based_ServiceParameter1.getBlocking_the_case()!=null)
			ResultDev += getResultValue(
					MemberNames.Blocking_the_case.toString(),
					Data_Based_ServiceParameter1.getBlocking_the_case()
							.getCaption());

			// Consumers
			if(Data_Based_ServiceParameter1.getConsumer()!=null)
			ResultDev += getResultValue(MemberNames.Consumer.toString(),
					Data_Based_ServiceParameter1.getConsumer().getCaption());

			// Buisness Logic
			if(Data_Based_ServiceParameter1.getBussiness_Logic_Nature()!=null)
			ResultDev += getResultValue(
					MemberNames.Bussiness_Logic_Nature.toString(),
					Data_Based_ServiceParameter1.getBussiness_Logic_Nature()
							.getCaption());

			// Database per service
			if(Data_Based_ServiceParameter1.getDatabase_Per_Service()!=null)
			ResultDev += getResultValue(
					MemberNames.Database_Per_Service.toString(),
					Data_Based_ServiceParameter1.getDatabase_Per_Service()
							.getCaption());

			// Distributed transaction
			if(Data_Based_ServiceParameter1.getDistributed_transaction()!=null)
			ResultDev += getResultValue(
					MemberNames.Distributed_transaction.toString(),
					Data_Based_ServiceParameter1.getDistributed_transaction()
							.getCaption());

			// Event based transactions
			if(Data_Based_ServiceParameter1.getEvent_base_Transaction()!=null)
			ResultDev += getResultValue(
					MemberNames.Event_base_Transaction.toString(),
					Data_Based_ServiceParameter1.getEvent_base_Transaction()
							.getCaption());

			// Separate read and write model?
			if(Data_Based_ServiceParameter1.getSeparate_Read_Write_Model()!=null)
			ResultDev += getResultValue(
					MemberNames.Separate_Read_Write_Model.toString(),
					Data_Based_ServiceParameter1.getSeparate_Read_Write_Model()
							.getCaption());
			
			// No Of Request Params***
			// IF(ISBLANK(F3), 0, IF(F3 < 5,5,IF(F3 < 10, 7, IF(F3 <15,8,10))))*$F$1
			Double value = 0.0;
			if(Data_Based_ServiceParameter1.getNo_of_Request_Parameter()!=null)
			{
			if (Data_Based_ServiceParameter1.getNo_of_Request_Parameter() < 5) {
				value = Service_Attribute_Entries_Map.get(MemberNames.No_of_Request_Parameter.toString()+"_<5"); // Set the proper
																	// column name
			} else if (Data_Based_ServiceParameter1.getNo_of_Request_Parameter() < 10) {
				value = Service_Attribute_Entries_Map.get(MemberNames.No_of_Request_Parameter.toString()+"_<10"); // Set the proper
																	// column name
			} else if (Data_Based_ServiceParameter1.getNo_of_Request_Parameter() < 15) {
				value = Service_Attribute_Entries_Map.get(MemberNames.No_of_Request_Parameter.toString()+"_<15"); // Set the proper
																	// column name
			} else {
				value = 10.0;
			}
			}
			
			System.out.println(value+"   "+"    "+Service_Attribute_Map.get(MemberNames.No_of_Request_Parameter.toString()));
			
			ResultDev += (value * Service_Attribute_Map.get(MemberNames.No_of_Request_Parameter.toString())) / 100;

			// No Of Response Params
			// IF(ISBLANK(G3), 0, IF(G3 < 5,5,IF(G3 < 10, 7, IF(G3 <15,8,10))))*$G$1
			
			if(Data_Based_ServiceParameter1.getNo_of_Response_Parameter()!=null)
			{

			if (Data_Based_ServiceParameter1.getNo_of_Response_Parameter() < 5) {
				value = Service_Attribute_Entries_Map.get(MemberNames.No_of_Response_Parameter.toString()+"_<5"); // Set the proper
																	// column name
			} else if (Data_Based_ServiceParameter1.getNo_of_Response_Parameter() < 10) {
				value = Service_Attribute_Entries_Map.get(MemberNames.No_of_Response_Parameter.toString()+"_<10"); // Set the proper
																	// column name
			} else if (Data_Based_ServiceParameter1.getNo_of_Response_Parameter() < 15) {
				value = Service_Attribute_Entries_Map.get(MemberNames.No_of_Response_Parameter.toString()+"_<15"); // Set the proper
																	// column name
			} else {
				value = 10.0;
			}
			
			System.out.println(value+"   "+"    "+Service_Attribute_Map.get(MemberNames.No_of_Response_Parameter.toString()));

			ResultDev += (value * Service_Attribute_Map.get(MemberNames.No_of_Response_Parameter.toString())) / 100;

		}} catch (Exception e) {

			e.printStackTrace();

		}

		System.out.println("****** "+ResultDev);
		return ResultDev;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@Override
	public java.lang.String toString()
	{
		return "Java_action_Databased";
	}

	// BEGIN EXTRA CODE

	private Double getResultValue(String _serviceAttObj, String _valueAttObj) {

		String serviceAttObj = _serviceAttObj;
		String valueAttObj = _valueAttObj;

		System.out.println(serviceAttObj
				+ "   "
				+ valueAttObj
				+ "    "
				+ Service_Attribute_Entries_Map.get(_serviceAttObj + "_"
						+ valueAttObj) + "   "
				+ Service_Attribute_Map.get(serviceAttObj));
//		System.out.println(Service_Attribute_Map.get(serviceAttObj));
//		System.out.println((Service_Attribute_Map.get(serviceAttObj) / 100));

		Double val = (Service_Attribute_Entries_Map.get(_serviceAttObj + "_"
				+ valueAttObj) * Service_Attribute_Map.get(serviceAttObj)) / 100;
		System.out.println(val);
		return val;
	}

	Map<String, Double> Service_Attribute_Entries_Map = new HashMap<>();
	Map<String, Integer> Service_Attribute_Map = new HashMap<>();

	// END EXTRA CODE
}
