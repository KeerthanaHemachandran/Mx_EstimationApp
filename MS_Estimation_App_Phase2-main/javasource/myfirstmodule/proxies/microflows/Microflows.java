// This file was generated by Mendix Modeler 7.6.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package myfirstmodule.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the MyFirstModule module
	public static java.lang.String aCT_Tooltip(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			return (java.lang.String)Core.execute(context, "MyFirstModule.ACT_Tooltip", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void addNewcommonflow(IContext context, myfirstmodule.proxies.Template _template)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Template", _template == null ? null : _template.getMendixObject());
			Core.execute(context, "MyFirstModule.addNewcommonflow", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void addNewdataflow(IContext context, myfirstmodule.proxies.Template _template)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Template", _template == null ? null : _template.getMendixObject());
			Core.execute(context, "MyFirstModule.addNewdataflow", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void addNewdevelopmentflow(IContext context, myfirstmodule.proxies.Template _template)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Template", _template == null ? null : _template.getMendixObject());
			Core.execute(context, "MyFirstModule.addNewdevelopmentflow", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void addNewinfraflow(IContext context, myfirstmodule.proxies.Template _template)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Template", _template == null ? null : _template.getMendixObject());
			Core.execute(context, "MyFirstModule.addNewinfraflow", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void addNewOrchFlow(IContext context, myfirstmodule.proxies.Template _template)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Template", _template == null ? null : _template.getMendixObject());
			Core.execute(context, "MyFirstModule.addNewOrchFlow", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void addNewpatternflow(IContext context, myfirstmodule.proxies.Template _template)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Template", _template == null ? null : _template.getMendixObject());
			Core.execute(context, "MyFirstModule.addNewpatternflow", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void addNewpolicyflow(IContext context, myfirstmodule.proxies.Template _template)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Template", _template == null ? null : _template.getMendixObject());
			Core.execute(context, "MyFirstModule.addNewpolicyflow", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void addNewtechflow(IContext context, myfirstmodule.proxies.Template _template)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Template", _template == null ? null : _template.getMendixObject());
			Core.execute(context, "MyFirstModule.addNewtechflow", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void commitSearchText(IContext context, myfirstmodule.proxies.SearchEntity _searchEntity)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SearchEntity", _searchEntity == null ? null : _searchEntity.getMendixObject());
			Core.execute(context, "MyFirstModule.CommitSearchText", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.math.BigDecimal common_Effort_CC(IContext context, myfirstmodule.proxies.Common_Effort _common_Effort)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Common_Effort", _common_Effort == null ? null : _common_Effort.getMendixObject());
			return (java.math.BigDecimal)Core.execute(context, "MyFirstModule.Common_Effort_CC", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.math.BigDecimal common_Effort_CD(IContext context, myfirstmodule.proxies.Common_Effort _common_Effort)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Common_Effort", _common_Effort == null ? null : _common_Effort.getMendixObject());
			return (java.math.BigDecimal)Core.execute(context, "MyFirstModule.Common_Effort_CD", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.math.BigDecimal common_Effort_LB(IContext context, myfirstmodule.proxies.Common_Effort _common_Effort)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Common_Effort", _common_Effort == null ? null : _common_Effort.getMendixObject());
			return (java.math.BigDecimal)Core.execute(context, "MyFirstModule.Common_Effort_LB", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.math.BigDecimal common_Effort_SM(IContext context, myfirstmodule.proxies.Common_Effort _common_Effort)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Common_Effort", _common_Effort == null ? null : _common_Effort.getMendixObject());
			return (java.math.BigDecimal)Core.execute(context, "MyFirstModule.Common_Effort_SM", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.math.BigDecimal common_Effort_SSRI(IContext context, myfirstmodule.proxies.Common_Effort _common_Effort)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Common_Effort", _common_Effort == null ? null : _common_Effort.getMendixObject());
			return (java.math.BigDecimal)Core.execute(context, "MyFirstModule.Common_Effort_SSRI", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void customSave_Template_DataCopy_BothTable(IContext context, myfirstmodule.proxies.Template _template)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Template", _template == null ? null : _template.getMendixObject());
			Core.execute(context, "MyFirstModule.CustomSave_Template_DataCopy_BothTable", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.math.BigDecimal data_coexist(IContext context, myfirstmodule.proxies.Data_Based_Service _data_Based_Service)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Data_Based_Service", _data_Based_Service == null ? null : _data_Based_Service.getMendixObject());
			return (java.math.BigDecimal)Core.execute(context, "MyFirstModule.data_coexist", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.math.BigDecimal data_consumer(IContext context, myfirstmodule.proxies.Data_Based_Service _data_Based_Service)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Data_Based_Service", _data_Based_Service == null ? null : _data_Based_Service.getMendixObject());
			return (java.math.BigDecimal)Core.execute(context, "MyFirstModule.data_consumer", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.math.BigDecimal data_serviceoverlap(IContext context, myfirstmodule.proxies.Data_Based_Service _data_Based_Service)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Data_Based_Service", _data_Based_Service == null ? null : _data_Based_Service.getMendixObject());
			return (java.math.BigDecimal)Core.execute(context, "MyFirstModule.data_serviceoverlap", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.math.BigDecimal data_versioning(IContext context, myfirstmodule.proxies.Data_Based_Service _data_Based_Service)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Data_Based_Service", _data_Based_Service == null ? null : _data_Based_Service.getMendixObject());
			return (java.math.BigDecimal)Core.execute(context, "MyFirstModule.data_versioning", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void databasedService(IContext context, myfirstmodule.proxies.Data_Based_Service _data_Based_Service)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Data_Based_Service", _data_Based_Service == null ? null : _data_Based_Service.getMendixObject());
			Core.execute(context, "MyFirstModule.DatabasedService", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void deleteTemplate(IContext context, myfirstmodule.proxies.Template _template)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Template", _template == null ? null : _template.getMendixObject());
			Core.execute(context, "MyFirstModule.deleteTemplate", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.math.BigDecimal dev_access(IContext context, myfirstmodule.proxies.Development_Process _development_Process)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Development_Process", _development_Process == null ? null : _development_Process.getMendixObject());
			return (java.math.BigDecimal)Core.execute(context, "MyFirstModule.dev_access", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.math.BigDecimal dev_branching(IContext context, myfirstmodule.proxies.Development_Process _development_Process)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Development_Process", _development_Process == null ? null : _development_Process.getMendixObject());
			return (java.math.BigDecimal)Core.execute(context, "MyFirstModule.Dev_branching", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.math.BigDecimal dev_documentation(IContext context, myfirstmodule.proxies.Development_Process _development_Process)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Development_Process", _development_Process == null ? null : _development_Process.getMendixObject());
			return (java.math.BigDecimal)Core.execute(context, "MyFirstModule.Dev_documentation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.math.BigDecimal dev_env(IContext context, myfirstmodule.proxies.Development_Process _development_Process)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Development_Process", _development_Process == null ? null : _development_Process.getMendixObject());
			return (java.math.BigDecimal)Core.execute(context, "MyFirstModule.Dev_env", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.math.BigDecimal dev_methodology(IContext context, myfirstmodule.proxies.Development_Process _development_Process)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Development_Process", _development_Process == null ? null : _development_Process.getMendixObject());
			return (java.math.BigDecimal)Core.execute(context, "MyFirstModule.Dev_methodology", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.math.BigDecimal dev_service_written(IContext context, myfirstmodule.proxies.Development_Process _development_Process)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Development_Process", _development_Process == null ? null : _development_Process.getMendixObject());
			return (java.math.BigDecimal)Core.execute(context, "MyFirstModule.dev_service_written", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.math.BigDecimal dev_testingtools(IContext context, myfirstmodule.proxies.Development_Process _development_Process)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Development_Process", _development_Process == null ? null : _development_Process.getMendixObject());
			return (java.math.BigDecimal)Core.execute(context, "MyFirstModule.Dev_testingtools", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.math.BigDecimal dev_tools(IContext context, myfirstmodule.proxies.Development_Process _development_Process)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Development_Process", _development_Process == null ? null : _development_Process.getMendixObject());
			return (java.math.BigDecimal)Core.execute(context, "MyFirstModule.Dev_tools", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void development(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "MyFirstModule.Development", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.math.BigDecimal development_pair(IContext context, myfirstmodule.proxies.Development_Process _development_Process)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Development_Process", _development_Process == null ? null : _development_Process.getMendixObject());
			return (java.math.BigDecimal)Core.execute(context, "MyFirstModule.Development_pair", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void edit_data_Template(IContext context, myfirstmodule.proxies.Template _template)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Template", _template == null ? null : _template.getMendixObject());
			Core.execute(context, "MyFirstModule.Edit_data_Template", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static myfirstmodule.proxies.Template estimation_Assumption(IContext context, myfirstmodule.proxies.Template _template)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Template", _template == null ? null : _template.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "MyFirstModule.Estimation_Assumption", params);
			return result == null ? null : myfirstmodule.proxies.Template.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Long estimation_Assumption_2(IContext context, myfirstmodule.proxies.Template _template)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Template", _template == null ? null : _template.getMendixObject());
			return (java.lang.Long)Core.execute(context, "MyFirstModule.Estimation_Assumption_2", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static myfirstmodule.proxies.Template estimation_Compute_Effort(IContext context, java.util.List<myfirstmodule.proxies.Orchestration_Service> _orchestration_ServiceList_2)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_orchestration_ServiceList_2 = null;
			if (_orchestration_ServiceList_2 != null)
			{
				listparam_orchestration_ServiceList_2 = new java.util.ArrayList<IMendixObject>();
				for (myfirstmodule.proxies.Orchestration_Service obj : _orchestration_ServiceList_2)
					listparam_orchestration_ServiceList_2.add(obj.getMendixObject());
			}
			params.put("Orchestration_ServiceList_2", listparam_orchestration_ServiceList_2);
			IMendixObject result = (IMendixObject)Core.execute(context, "MyFirstModule.Estimation_Compute_Effort", params);
			return result == null ? null : myfirstmodule.proxies.Template.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static myfirstmodule.proxies.Template estimation_template_Object_pass(IContext context, myfirstmodule.proxies.Template _template)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Template", _template == null ? null : _template.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "MyFirstModule.Estimation_template_Object_pass", params);
			return result == null ? null : myfirstmodule.proxies.Template.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void generateExcel(IContext context, myfirstmodule.proxies.Template _template)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Template", _template == null ? null : _template.getMendixObject());
			Core.execute(context, "MyFirstModule.GenerateExcel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<myfirstmodule.proxies.Template> getArchive_Templates(IContext context, myfirstmodule.proxies.SearchEntity _searchEntity)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SearchEntity", _searchEntity == null ? null : _searchEntity.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "MyFirstModule.getArchive_Templates", params);
			java.util.List<myfirstmodule.proxies.Template> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<myfirstmodule.proxies.Template>();
				for (IMendixObject obj : objs)
					result.add(myfirstmodule.proxies.Template.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static myfirstmodule.proxies.Photo getPhoto(IContext context, myfirstmodule.proxies.Template _template)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Template", _template == null ? null : _template.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "MyFirstModule.getPhoto", params);
			return result == null ? null : myfirstmodule.proxies.Photo.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static myfirstmodule.proxies.SearchEntity getSearchEntity(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "MyFirstModule.getSearchEntity", params);
			return result == null ? null : myfirstmodule.proxies.SearchEntity.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static system.proxies.User getsessionuser(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "MyFirstModule.getsessionuser", params);
			return result == null ? null : system.proxies.User.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<myfirstmodule.proxies.Template> getTemplates(IContext context, myfirstmodule.proxies.SearchEntity _searchEntity)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SearchEntity", _searchEntity == null ? null : _searchEntity.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "MyFirstModule.getTemplates", params);
			java.util.List<myfirstmodule.proxies.Template> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<myfirstmodule.proxies.Template>();
				for (IMendixObject obj : objs)
					result.add(myfirstmodule.proxies.Template.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.math.BigDecimal infra_Autoscaling(IContext context, myfirstmodule.proxies.Infrastructure _infrastructure)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Infrastructure", _infrastructure == null ? null : _infrastructure.getMendixObject());
			return (java.math.BigDecimal)Core.execute(context, "MyFirstModule.Infra_Autoscaling", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.math.BigDecimal infra_Geo(IContext context, myfirstmodule.proxies.Infrastructure _infrastructure)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Infrastructure", _infrastructure == null ? null : _infrastructure.getMendixObject());
			return (java.math.BigDecimal)Core.execute(context, "MyFirstModule.Infra_Geo", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.math.BigDecimal infra_Performance(IContext context, myfirstmodule.proxies.Infrastructure _infrastructure)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Infrastructure", _infrastructure == null ? null : _infrastructure.getMendixObject());
			return (java.math.BigDecimal)Core.execute(context, "MyFirstModule.Infra_Performance", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void microflow_assumption_delete(IContext context, myfirstmodule.proxies.Assumptions _assumptions)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Assumptions", _assumptions == null ? null : _assumptions.getMendixObject());
			Core.execute(context, "MyFirstModule.Microflow_assumption_delete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void microflow_assumption_local_delete(IContext context, myfirstmodule.proxies.Assumptions_Local _assumptions_Local)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Assumptions_Local", _assumptions_Local == null ? null : _assumptions_Local.getMendixObject());
			Core.execute(context, "MyFirstModule.Microflow_assumption_local_delete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void microflow_Assumption_masterdata(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "MyFirstModule.Microflow_Assumption_masterdata", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void microflow_Common_Effort(IContext context, myfirstmodule.proxies.Common_Effort _common_Effort)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Common_Effort", _common_Effort == null ? null : _common_Effort.getMendixObject());
			Core.execute(context, "MyFirstModule.Microflow_Common_Effort", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void microflow_create_obj_commoneffort_sav(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "MyFirstModule.Microflow_create_obj_commoneffort_sav", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void microflow_create_obj_database_sav_2(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "MyFirstModule.Microflow_create_obj_database_sav_2", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void microflow_create_obj_development_sav(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "MyFirstModule.Microflow_create_obj_development_sav", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void microflow_create_obj_orches_sav(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "MyFirstModule.Microflow_create_obj_orches_sav", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void microflow_create_obj_pattern_sav(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "MyFirstModule.Microflow_create_obj_pattern_sav", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void microflow_create_obj_policy_sav(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "MyFirstModule.Microflow_create_obj_policy_sav", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void microflow_create_obj_techstack_sav(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "MyFirstModule.Microflow_create_obj_techstack_sav", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void microflow_create_service_attribute(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "MyFirstModule.Microflow_create_service_attribute", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void microflow_data_template(IContext context, myfirstmodule.proxies.Template _template)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Template", _template == null ? null : _template.getMendixObject());
			Core.execute(context, "MyFirstModule.Microflow_data_template", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void microflow_Databased_services(IContext context, myfirstmodule.proxies.Data_Based_Service _data_Based_Service)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Data_Based_Service", _data_Based_Service == null ? null : _data_Based_Service.getMendixObject());
			Core.execute(context, "MyFirstModule.Microflow_Databased_services", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void microflow_delet_orches_sav(IContext context, myfirstmodule.proxies.Orch_SAV _orch_SAV)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Orch_SAV", _orch_SAV == null ? null : _orch_SAV.getMendixObject());
			Core.execute(context, "MyFirstModule.Microflow_delet_orches_sav", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void microflow_delete(IContext context, myfirstmodule.proxies.Service_Attribute_Local _service_Attribute_Local)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Service_Attribute_Local", _service_Attribute_Local == null ? null : _service_Attribute_Local.getMendixObject());
			Core.execute(context, "MyFirstModule.Microflow_delete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void microflow_delete_Accout(IContext context, administration.proxies.Account _account)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Account", _account == null ? null : _account.getMendixObject());
			Core.execute(context, "MyFirstModule.Microflow_delete_Accout", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void microflow_delete_common_sav(IContext context, myfirstmodule.proxies.Common_Effort_SAV _common_Effort_SAV)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Common_Effort_SAV", _common_Effort_SAV == null ? null : _common_Effort_SAV.getMendixObject());
			Core.execute(context, "MyFirstModule.Microflow_delete_common_sav", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void microflow_delete_commoneffort(IContext context, myfirstmodule.proxies.Common_Effort _common_Effort)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Common_Effort", _common_Effort == null ? null : _common_Effort.getMendixObject());
			Core.execute(context, "MyFirstModule.Microflow_delete_commoneffort", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void microflow_delete_database(IContext context, myfirstmodule.proxies.Data_Based_Service _data_Based_Service)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Data_Based_Service", _data_Based_Service == null ? null : _data_Based_Service.getMendixObject());
			Core.execute(context, "MyFirstModule.Microflow_delete_database", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void microflow_delete_database_sav(IContext context, myfirstmodule.proxies.Data_Based_SAV _data_Based_SAV)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Data_Based_SAV", _data_Based_SAV == null ? null : _data_Based_SAV.getMendixObject());
			Core.execute(context, "MyFirstModule.Microflow_delete_database_sav", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void microflow_delete_deve_process_sav(IContext context, myfirstmodule.proxies.Dev_process_SAV _dev_process_SAV)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Dev_process_SAV", _dev_process_SAV == null ? null : _dev_process_SAV.getMendixObject());
			Core.execute(context, "MyFirstModule.Microflow_delete_deve_process_sav", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void microflow_delete_infrastructure_sav(IContext context, myfirstmodule.proxies.Infrastructure_SAV _infrastructure_SAV)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Infrastructure_SAV", _infrastructure_SAV == null ? null : _infrastructure_SAV.getMendixObject());
			Core.execute(context, "MyFirstModule.Microflow_delete_infrastructure_sav", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void microflow_delete_master_serviceattribute(IContext context, myfirstmodule.proxies.Service_Attribute _service_Attribute)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Service_Attribute", _service_Attribute == null ? null : _service_Attribute.getMendixObject());
			Core.execute(context, "MyFirstModule.Microflow_delete_master_serviceattribute", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void microflow_delete_pattern(IContext context, myfirstmodule.proxies.Patterns_Practices _patterns_Practices)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Patterns_Practices", _patterns_Practices == null ? null : _patterns_Practices.getMendixObject());
			Core.execute(context, "MyFirstModule.Microflow_delete_pattern", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void microflow_delete_pattern_sav(IContext context, myfirstmodule.proxies.Patterns_Practices_SAV _patterns_Practices_SAV)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Patterns_Practices_SAV", _patterns_Practices_SAV == null ? null : _patterns_Practices_SAV.getMendixObject());
			Core.execute(context, "MyFirstModule.Microflow_delete_pattern_sav", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void microflow_delete_policy(IContext context, myfirstmodule.proxies.Policy _policy)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Policy", _policy == null ? null : _policy.getMendixObject());
			Core.execute(context, "MyFirstModule.Microflow_delete_policy", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void microflow_delete_policy_sav(IContext context, myfirstmodule.proxies.Policy_SAV _policy_SAV)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Policy_SAV", _policy_SAV == null ? null : _policy_SAV.getMendixObject());
			Core.execute(context, "MyFirstModule.Microflow_delete_policy_sav", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void microflow_delete_sav_teckstack(IContext context, myfirstmodule.proxies.Tech_Stack_SAV _tech_Stack_SAV)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Tech_Stack_SAV", _tech_Stack_SAV == null ? null : _tech_Stack_SAV.getMendixObject());
			Core.execute(context, "MyFirstModule.Microflow_delete_sav_teckstack", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void microflow_delete_teckstack(IContext context, myfirstmodule.proxies.Tech_Stack _tech_Stack)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Tech_Stack", _tech_Stack == null ? null : _tech_Stack.getMendixObject());
			Core.execute(context, "MyFirstModule.Microflow_delete_teckstack", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void microflow_delete_user_Account(IContext context, administration.proxies.Account _account)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Account", _account == null ? null : _account.getMendixObject());
			Core.execute(context, "MyFirstModule.Microflow_delete_user_Account", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void microflow_delete_value(IContext context, myfirstmodule.proxies.Service_Attribute_Entries _service_Attribute_Entries)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Service_Attribute_Entries", _service_Attribute_Entries == null ? null : _service_Attribute_Entries.getMendixObject());
			Core.execute(context, "MyFirstModule.Microflow_delete_value", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void microflow_DeleteSheet(IContext context, xlsreport.proxies.MxSheet _mxSheet)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MxSheet", _mxSheet == null ? null : _mxSheet.getMendixObject());
			Core.execute(context, "MyFirstModule.Microflow_DeleteSheet", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void microflow_Development(IContext context, myfirstmodule.proxies.Development_Process _development_Process)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Development_Process", _development_Process == null ? null : _development_Process.getMendixObject());
			Core.execute(context, "MyFirstModule.Microflow_Development", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void microflow_development_delete(IContext context, myfirstmodule.proxies.Development_Process _development_Process)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Development_Process", _development_Process == null ? null : _development_Process.getMendixObject());
			Core.execute(context, "MyFirstModule.Microflow_development_delete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void microflow_Freeze(IContext context, myfirstmodule.proxies.Template _template, myfirstmodule.proxies.SearchEntity _searchEntity)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Template", _template == null ? null : _template.getMendixObject());
			params.put("SearchEntity", _searchEntity == null ? null : _searchEntity.getMendixObject());
			Core.execute(context, "MyFirstModule.Microflow_Freeze", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void microflow_Infrastructure(IContext context, myfirstmodule.proxies.Infrastructure _infrastructure)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Infrastructure", _infrastructure == null ? null : _infrastructure.getMendixObject());
			Core.execute(context, "MyFirstModule.Microflow_Infrastructure", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void microflow_inftra_delete(IContext context, myfirstmodule.proxies.Infrastructure _infrastructure)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Infrastructure", _infrastructure == null ? null : _infrastructure.getMendixObject());
			Core.execute(context, "MyFirstModule.Microflow_inftra_delete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void microflow_oschresh_delete(IContext context, myfirstmodule.proxies.Orchestration_Service _orchestration_Service)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Orchestration_Service", _orchestration_Service == null ? null : _orchestration_Service.getMendixObject());
			Core.execute(context, "MyFirstModule.Microflow_oschresh_delete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void microflow_Patterns_Practises(IContext context, myfirstmodule.proxies.Patterns_Practices _patterns_Practices)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Patterns_Practices", _patterns_Practices == null ? null : _patterns_Practices.getMendixObject());
			Core.execute(context, "MyFirstModule.Microflow_Patterns_Practises", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void microflow_Policy(IContext context, myfirstmodule.proxies.Policy _policy)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Policy", _policy == null ? null : _policy.getMendixObject());
			Core.execute(context, "MyFirstModule.Microflow_Policy", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void microflow_Service_Attribue_masterdata(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "MyFirstModule.Microflow_Service_Attribue_masterdata", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void microflow_TechStack(IContext context, myfirstmodule.proxies.Tech_Stack _tech_Stack)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Tech_Stack", _tech_Stack == null ? null : _tech_Stack.getMendixObject());
			Core.execute(context, "MyFirstModule.Microflow_TechStack", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void microflow_Template_Archive_Dashboard(IContext context, myfirstmodule.proxies.Template _template, myfirstmodule.proxies.SearchEntity _searchEntity)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Template", _template == null ? null : _template.getMendixObject());
			params.put("SearchEntity", _searchEntity == null ? null : _searchEntity.getMendixObject());
			Core.execute(context, "MyFirstModule.Microflow_Template_Archive_Dashboard", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.math.BigDecimal orchestartion_No_Of_Request(IContext context, myfirstmodule.proxies.Orchestration_Service _orchestration_Service, myfirstmodule.proxies.Service_Attribute _service_Attribute)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Orchestration_Service", _orchestration_Service == null ? null : _orchestration_Service.getMendixObject());
			params.put("Service_Attribute", _service_Attribute == null ? null : _service_Attribute.getMendixObject());
			return (java.math.BigDecimal)Core.execute(context, "MyFirstModule.Orchestartion_No_Of_Request", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void orchestartion_Save_Duplicate(IContext context, myfirstmodule.proxies.Orchestration_Service _orchestration_Service, myfirstmodule.proxies.Service_Attribute_Entries _service_Attribute_Entries)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Orchestration_Service", _orchestration_Service == null ? null : _orchestration_Service.getMendixObject());
			params.put("Service_Attribute_Entries", _service_Attribute_Entries == null ? null : _service_Attribute_Entries.getMendixObject());
			Core.execute(context, "MyFirstModule.Orchestartion_Save_Duplicate", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.math.BigDecimal orchestration_Aggregate(IContext context, myfirstmodule.proxies.Orchestration_Service _orchestration_Service)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Orchestration_Service", _orchestration_Service == null ? null : _orchestration_Service.getMendixObject());
			return (java.math.BigDecimal)Core.execute(context, "MyFirstModule.Orchestration_Aggregate", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.math.BigDecimal orchestration_Block(IContext context, myfirstmodule.proxies.Orchestration_Service _orchestration_Service)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Orchestration_Service", _orchestration_Service == null ? null : _orchestration_Service.getMendixObject());
			return (java.math.BigDecimal)Core.execute(context, "MyFirstModule.Orchestration_Block", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.math.BigDecimal orchestration_Business(IContext context, myfirstmodule.proxies.Orchestration_Service _orchestration_Service)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Orchestration_Service", _orchestration_Service == null ? null : _orchestration_Service.getMendixObject());
			return (java.math.BigDecimal)Core.execute(context, "MyFirstModule.Orchestration_Business", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.math.BigDecimal orchestration_cache(IContext context, myfirstmodule.proxies.Orchestration_Service _orchestration_Service)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Orchestration_Service", _orchestration_Service == null ? null : _orchestration_Service.getMendixObject());
			return (java.math.BigDecimal)Core.execute(context, "MyFirstModule.Orchestration_cache", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.math.BigDecimal orchestration_Co_Exist(IContext context, myfirstmodule.proxies.Orchestration_Service _orchestration_Service)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Orchestration_Service", _orchestration_Service == null ? null : _orchestration_Service.getMendixObject());
			return (java.math.BigDecimal)Core.execute(context, "MyFirstModule.Orchestration_Co_Exist", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.math.BigDecimal orchestration_Consumer(IContext context, myfirstmodule.proxies.Orchestration_Service _orchestration_Service)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Orchestration_Service", _orchestration_Service == null ? null : _orchestration_Service.getMendixObject());
			return (java.math.BigDecimal)Core.execute(context, "MyFirstModule.Orchestration_Consumer", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.math.BigDecimal orchestration_Development(IContext context, myfirstmodule.proxies.Orchestration_Service _orchestration_Service)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Orchestration_Service", _orchestration_Service == null ? null : _orchestration_Service.getMendixObject());
			return (java.math.BigDecimal)Core.execute(context, "MyFirstModule.Orchestration_Development", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.math.BigDecimal orchestration_Implementation(IContext context, myfirstmodule.proxies.Orchestration_Service _orchestration_Service)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Orchestration_Service", _orchestration_Service == null ? null : _orchestration_Service.getMendixObject());
			return (java.math.BigDecimal)Core.execute(context, "MyFirstModule.Orchestration_Implementation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.math.BigDecimal orchestration_Mode(IContext context, myfirstmodule.proxies.Orchestration_Service _orchestration_Service)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Orchestration_Service", _orchestration_Service == null ? null : _orchestration_Service.getMendixObject());
			return (java.math.BigDecimal)Core.execute(context, "MyFirstModule.Orchestration_Mode", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.math.BigDecimal orchestration_OutputFormat(IContext context, myfirstmodule.proxies.Orchestration_Service _orchestration_Service)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Orchestration_Service", _orchestration_Service == null ? null : _orchestration_Service.getMendixObject());
			return (java.math.BigDecimal)Core.execute(context, "MyFirstModule.Orchestration_OutputFormat", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void orchestration_Save(IContext context, myfirstmodule.proxies.Orchestration_Service _orchestration_Service, myfirstmodule.proxies.Service_Attribute_Entries _service_Attribute_Entries)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Orchestration_Service", _orchestration_Service == null ? null : _orchestration_Service.getMendixObject());
			params.put("Service_Attribute_Entries", _service_Attribute_Entries == null ? null : _service_Attribute_Entries.getMendixObject());
			Core.execute(context, "MyFirstModule.Orchestration_Save", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.math.BigDecimal orchestration_Service_overlap(IContext context, myfirstmodule.proxies.Orchestration_Service _orchestration_Service)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Orchestration_Service", _orchestration_Service == null ? null : _orchestration_Service.getMendixObject());
			return (java.math.BigDecimal)Core.execute(context, "MyFirstModule.Orchestration_Service_overlap", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.math.BigDecimal orchestration_Versioning(IContext context, myfirstmodule.proxies.Orchestration_Service _orchestration_Service)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Orchestration_Service", _orchestration_Service == null ? null : _orchestration_Service.getMendixObject());
			return (java.math.BigDecimal)Core.execute(context, "MyFirstModule.Orchestration_Versioning", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void pass_ID_for_Sevice_Attribute_Entry(IContext context, myfirstmodule.proxies.Service_Attribute _service_Attribute)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Service_Attribute", _service_Attribute == null ? null : _service_Attribute.getMendixObject());
			Core.execute(context, "MyFirstModule.Pass_ID_for_Sevice_Attribute_Entry", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static myfirstmodule.proxies.Service_Attribute pass_Service_Attribute_entity(IContext context, myfirstmodule.proxies.Service_Attribute _service_Attribute)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Service_Attribute", _service_Attribute == null ? null : _service_Attribute.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "MyFirstModule.Pass_Service_Attribute_entity", params);
			return result == null ? null : myfirstmodule.proxies.Service_Attribute.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.math.BigDecimal patterns_Practises_MessagingPattern(IContext context, myfirstmodule.proxies.Patterns_Practices _patterns_Practices)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Patterns_Practices", _patterns_Practices == null ? null : _patterns_Practices.getMendixObject());
			return (java.math.BigDecimal)Core.execute(context, "MyFirstModule.Patterns_Practises_MessagingPattern", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.math.BigDecimal patterns_Practises_Monolithic(IContext context, myfirstmodule.proxies.Patterns_Practices _patterns_Practices)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Patterns_Practices", _patterns_Practices == null ? null : _patterns_Practices.getMendixObject());
			return (java.math.BigDecimal)Core.execute(context, "MyFirstModule.Patterns_Practises_Monolithic", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.math.BigDecimal patterns_Practises_SOA(IContext context, myfirstmodule.proxies.Patterns_Practices _patterns_Practices)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Patterns_Practices", _patterns_Practices == null ? null : _patterns_Practices.getMendixObject());
			return (java.math.BigDecimal)Core.execute(context, "MyFirstModule.Patterns_Practises_SOA", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.math.BigDecimal policy_Auth(IContext context, myfirstmodule.proxies.Policy _policy)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Policy", _policy == null ? null : _policy.getMendixObject());
			return (java.math.BigDecimal)Core.execute(context, "MyFirstModule.Policy_Auth", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.math.BigDecimal policy_CRL(IContext context, myfirstmodule.proxies.Policy _policy)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Policy", _policy == null ? null : _policy.getMendixObject());
			return (java.math.BigDecimal)Core.execute(context, "MyFirstModule.Policy_CRL", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.math.BigDecimal policy_Json(IContext context, myfirstmodule.proxies.Policy _policy)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Policy", _policy == null ? null : _policy.getMendixObject());
			return (java.math.BigDecimal)Core.execute(context, "MyFirstModule.Policy_Json", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.math.BigDecimal policy_Regex(IContext context, myfirstmodule.proxies.Policy _policy)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Policy", _policy == null ? null : _policy.getMendixObject());
			return (java.math.BigDecimal)Core.execute(context, "MyFirstModule.Policy_Regex", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.math.BigDecimal policy_Spike(IContext context, myfirstmodule.proxies.Policy _policy)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Policy", _policy == null ? null : _policy.getMendixObject());
			return (java.math.BigDecimal)Core.execute(context, "MyFirstModule.Policy_Spike", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.math.BigDecimal policy_Statistics(IContext context, myfirstmodule.proxies.Policy _policy)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Policy", _policy == null ? null : _policy.getMendixObject());
			return (java.math.BigDecimal)Core.execute(context, "MyFirstModule.Policy_Statistics", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.math.BigDecimal policy_Valid(IContext context, myfirstmodule.proxies.Policy _policy)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Policy", _policy == null ? null : _policy.getMendixObject());
			return (java.math.BigDecimal)Core.execute(context, "MyFirstModule.Policy_Valid", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void refresh_Calculation(IContext context, myfirstmodule.proxies.Template _template, myfirstmodule.proxies.Orchestration_Service _orchestration_Service)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Template", _template == null ? null : _template.getMendixObject());
			params.put("Orchestration_Service", _orchestration_Service == null ? null : _orchestration_Service.getMendixObject());
			Core.execute(context, "MyFirstModule.Refresh_Calculation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void restore_template(IContext context, myfirstmodule.proxies.Template _template, myfirstmodule.proxies.SearchEntity _searchEntity)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Template", _template == null ? null : _template.getMendixObject());
			params.put("SearchEntity", _searchEntity == null ? null : _searchEntity.getMendixObject());
			Core.execute(context, "MyFirstModule.Restore_template", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<administration.proxies.Account> retrieve_Admin_Email(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.List<IMendixObject> objs = Core.execute(context, "MyFirstModule.Retrieve_Admin_Email", params);
			java.util.List<administration.proxies.Account> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<administration.proxies.Account>();
				for (IMendixObject obj : objs)
					result.add(administration.proxies.Account.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void saveImage(IContext context, myfirstmodule.proxies.Photo _photo, myfirstmodule.proxies.Template _template)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Photo", _photo == null ? null : _photo.getMendixObject());
			params.put("Template", _template == null ? null : _template.getMendixObject());
			Core.execute(context, "MyFirstModule.SaveImage", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.math.BigDecimal tech_stack_CD(IContext context, myfirstmodule.proxies.Tech_Stack _tech_Stack)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Tech_Stack", _tech_Stack == null ? null : _tech_Stack.getMendixObject());
			return (java.math.BigDecimal)Core.execute(context, "MyFirstModule.Tech_stack_CD", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.math.BigDecimal tech_stack_CI(IContext context, myfirstmodule.proxies.Tech_Stack _tech_Stack)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Tech_Stack", _tech_Stack == null ? null : _tech_Stack.getMendixObject());
			return (java.math.BigDecimal)Core.execute(context, "MyFirstModule.Tech_stack_CI", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.math.BigDecimal tech_stack_database(IContext context, myfirstmodule.proxies.Tech_Stack _tech_Stack)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Tech_Stack", _tech_Stack == null ? null : _tech_Stack.getMendixObject());
			return (java.math.BigDecimal)Core.execute(context, "MyFirstModule.tech_stack_database", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.math.BigDecimal tech_stack_framework(IContext context, myfirstmodule.proxies.Tech_Stack _tech_Stack)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Tech_Stack", _tech_Stack == null ? null : _tech_Stack.getMendixObject());
			return (java.math.BigDecimal)Core.execute(context, "MyFirstModule.Tech_stack_framework", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.math.BigDecimal tech_stack_language(IContext context, myfirstmodule.proxies.Tech_Stack _tech_Stack)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Tech_Stack", _tech_Stack == null ? null : _tech_Stack.getMendixObject());
			return (java.math.BigDecimal)Core.execute(context, "MyFirstModule.Tech_stack_language", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.math.BigDecimal tech_stack_msg(IContext context, myfirstmodule.proxies.Tech_Stack _tech_Stack)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Tech_Stack", _tech_Stack == null ? null : _tech_Stack.getMendixObject());
			return (java.math.BigDecimal)Core.execute(context, "MyFirstModule.Tech_stack_msg", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.math.BigDecimal tech_stack_runtime(IContext context, myfirstmodule.proxies.Tech_Stack _tech_Stack)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Tech_Stack", _tech_Stack == null ? null : _tech_Stack.getMendixObject());
			return (java.math.BigDecimal)Core.execute(context, "MyFirstModule.Tech_stack_runtime", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.math.BigDecimal tech_stack_runtimetype(IContext context, myfirstmodule.proxies.Tech_Stack _tech_Stack)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Tech_Stack", _tech_Stack == null ? null : _tech_Stack.getMendixObject());
			return (java.math.BigDecimal)Core.execute(context, "MyFirstModule.Tech_stack_runtimetype", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void test_javaAction(IContext context, myfirstmodule.proxies.Orchestration_Service _orchestration_Service)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Orchestration_Service", _orchestration_Service == null ? null : _orchestration_Service.getMendixObject());
			Core.execute(context, "MyFirstModule.Test_javaAction", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void test_javaAction_DataBasedService(IContext context, myfirstmodule.proxies.Data_Based_Service _data_Based_Service)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Data_Based_Service", _data_Based_Service == null ? null : _data_Based_Service.getMendixObject());
			Core.execute(context, "MyFirstModule.Test_javaAction_DataBasedService", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static myfirstmodule.proxies.Template total_Consolidated_Estimate(IContext context, myfirstmodule.proxies.Template _template, java.lang.Long _final)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Template", _template == null ? null : _template.getMendixObject());
			params.put("Final", _final);
			IMendixObject result = (IMendixObject)Core.execute(context, "MyFirstModule.total_Consolidated_Estimate", params);
			return result == null ? null : myfirstmodule.proxies.Template.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static myfirstmodule.proxies.Photo upload_Image(IContext context, myfirstmodule.proxies.Template _template)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Template", _template == null ? null : _template.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "MyFirstModule.Upload_Image", params);
			return result == null ? null : myfirstmodule.proxies.Photo.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void value_pass_local_Orch_template(IContext context, myfirstmodule.proxies.Template _template)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Template", _template == null ? null : _template.getMendixObject());
			Core.execute(context, "MyFirstModule.value_pass_local_Orch_template", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void value_pass_to_CommonEffort(IContext context, myfirstmodule.proxies.Template _template)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Template", _template == null ? null : _template.getMendixObject());
			Core.execute(context, "MyFirstModule.Value_pass_to_CommonEffort", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void value_pass_to_DataBased(IContext context, myfirstmodule.proxies.Template _template)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Template", _template == null ? null : _template.getMendixObject());
			Core.execute(context, "MyFirstModule.Value_pass_to_DataBased", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void value_pass_to_Develpement(IContext context, myfirstmodule.proxies.Template _template)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Template", _template == null ? null : _template.getMendixObject());
			Core.execute(context, "MyFirstModule.Value_pass_to_Develpement", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void value_pass_to_Infrastructure(IContext context, myfirstmodule.proxies.Template _template)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Template", _template == null ? null : _template.getMendixObject());
			Core.execute(context, "MyFirstModule.Value_pass_to_Infrastructure", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void value_pass_to_orchestartion(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "MyFirstModule.Value_pass_to_orchestartion", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void value_pass_to_pattern(IContext context, myfirstmodule.proxies.Template _template)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Template", _template == null ? null : _template.getMendixObject());
			Core.execute(context, "MyFirstModule.Value_pass_to_pattern", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void value_pass_to_Policy(IContext context, myfirstmodule.proxies.Template _template)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Template", _template == null ? null : _template.getMendixObject());
			Core.execute(context, "MyFirstModule.Value_pass_to_Policy", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void value_pass_to_TechStack(IContext context, myfirstmodule.proxies.Template _template)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Template", _template == null ? null : _template.getMendixObject());
			Core.execute(context, "MyFirstModule.Value_pass_to_TechStack", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
}